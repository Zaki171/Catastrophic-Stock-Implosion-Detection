{
  "statistical": {
    "Absolute energy": {
      "complexity": "log",
      "description": "Computes the absolute energy of the signal.",
      "function": "tsfel.abs_energy",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "Average power": {
      "complexity": "constant",
      "description": "Computes the average power of the signal.",
      "function": "tsfel.average_power",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "ECDF": {
      "complexity": "log",
      "description": "Computes the values of ECDF (empirical cumulative distribution function) along the time axis.",
      "function": "tsfel.ecdf",
      "parameters": {
        "d": 10
      },
      "n_features": "d",
      "use": "yes"
    },
    "ECDF Percentile Count": {
      "complexity": "log",
      "description": "Determines the cumulative sum of samples that are less than the percentile.",
      "function": "tsfel.ecdf_percentile_count",
      "parameters": {
        "percentile": "[0.2, 0.8]"
      },
      "n_features": "percentile",
      "use": "yes"
    },
    "Entropy": {
      "complexity": "log",
      "description": "Computes the entropy of the signal using the Shannon Entropy.",
      "function": "tsfel.entropy",
      "parameters": {
        "prob": "standard"
      },
      "n_features": 1,
      "use": "yes",
      "tag": "eeg"
    },
    "Histogram": {
      "complexity": "log",
      "description": "Computes histogram of the signal.",
      "function": "tsfel.hist",
      "parameters": {
        "nbins": 10,
        "r": 1
      },
      "n_features": "nbins",
      "use": "yes"
    },
    "Interquartile range": {
      "complexity": "constant",
      "description": "Computes interquartile range of the signal.",
      "function": "tsfel.interq_range",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Kurtosis": {
      "complexity": "constant",
      "description": "Computes kurtosis of the signal.",
      "function": "tsfel.kurtosis",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Max": {
      "complexity": "constant",
      "description": "Computes the maximum value of the signal.",
      "function": "tsfel.calc_max",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Mean": {
      "complexity": "constant",
      "description": "Computes the mean value of the signal.",
      "function": "tsfel.calc_mean",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "inertial"
    },
    "Mean absolute deviation": {
      "complexity": "log",
      "description": "Computes mean absolute deviation of the signal.",
      "function": "tsfel.mean_abs_deviation",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median": {
      "complexity": "constant",
      "description": "Computes median of the signal.",
      "function": "tsfel.calc_median",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median absolute deviation": {
      "complexity": "constant",
      "description": "Computes median absolute deviation of the signal.",
      "function": "tsfel.median_abs_deviation",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Min": {
      "complexity": "constant",
      "description": "Computes the minimum value of the signal.",
      "function": "tsfel.calc_min",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Peak to peak distance": {
      "complexity": "constant",
      "description": "Computes the peak to peak distance.",
      "function": "tsfel.pk_pk_distance",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Root mean square": {
      "complexity": "constant",
      "description": "Computes root mean square of the signal.",
      "function": "tsfel.rms",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": [
        "emg",
        "inertial"
      ]
    },
    "Skewness": {
      "complexity": "constant",
      "description": "Computes skewness of the signal.",
      "function": "tsfel.skewness",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Standard deviation": {
      "complexity": "constant",
      "description": "Computes standard deviation of the signal.",
      "function": "tsfel.calc_std",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Variance": {
      "complexity": "constant",
      "description": "Computes variance of the signal.",
      "function": "tsfel.calc_var",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    }
  },
  "temporal": {
    "Area under the curve": {
      "complexity": "log",
      "description": "Computes the area under the curve of the signal computed with trapezoid rule.",
      "function": "tsfel.auc",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Autocorrelation": {
      "complexity": "constant",
      "description": "Computes autocorrelation of the signal.",
      "function": "tsfel.autocorr",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "inertial"
    },
    "Centroid": {
      "complexity": "constant",
      "description": "Computes the centroid along the time axis.",
      "function": "tsfel.calc_centroid",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Mean absolute diff": {
      "complexity": "constant",
      "description": "Computes mean absolute differences of the signal.",
      "function": "tsfel.mean_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Mean diff": {
      "complexity": "constant",
      "description": "Computes mean of differences of the signal.",
      "function": "tsfel.mean_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median absolute diff": {
      "complexity": "constant",
      "description": "Computes median absolute differences of the signal.",
      "function": "tsfel.median_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median diff": {
      "complexity": "constant",
      "description": "Computes median of differences of the signal.",
      "function": "tsfel.median_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Negative turning points": {
      "complexity": "constant",
      "description": "Computes number of negative turning points of the signal.",
      "function": "tsfel.negative_turning",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "emg"
    },
    "Neighbourhood peaks": {
      "complexity": "constant",
      "description": "Computes the number of peaks from a defined neighbourhood of the signal.",
      "function": "tsfel.neighbourhood_peaks",
      "parameters": {
        "n": 10
      },
      "n_features": 1,
      "use": "yes"
    },
    "Positive turning points": {
      "complexity": "constant",
      "description": "Computes number of positive turning points of the signal.",
      "function": "tsfel.positive_turning",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "emg"
    },
    "Signal distance": {
      "complexity": "constant",
      "description": "Computes signal traveled distance.",
      "function": "tsfel.distance",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Sum absolute diff": {
      "complexity": "constant",
      "description": "Computes sum of absolute differences of the signal.",
      "function": "tsfel.sum_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Zero crossing rate": {
      "complexity": "constant",
      "description": "Computes Zero-crossing rate of the signal.",
      "function": "tsfel.zero_cross",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": [
        "audio",
        "emg"
      ]
    }
  }
}